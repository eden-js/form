<form-admin-update-page>
  <admin-header title={ `${form.get('id') ? 'Update' : 'Create'} Form ${form.get(`'title.${language}`)}` } on-preview={ onPreview }>
    <div slot="right">

      <a href="/admin/form" class="btn btn-lg btn-primary">
        Back
      </a>

    </div>
  </admin-header>

  <div class="container-fluid">

    <div ref="form" class="admin-form" show={ !preview }>
      <div class="card mb-3">
        <div class="card-header">
          Form Information
        </div>
        <div class="card-header">
          <ul class="nav nav-tabs card-header-tabs">
            <li each={ (lng, i) in languages } class="nav-item">
              <a class={ classes({'nav-link' : true, 'active' : eden.get('i18n.lang')() === lng}) } href="#!" data-lng={ lng } onclick={ onLanguage }>{ lng }</a>
            </li>
          </ul>
        </div>
        <div class="card-body">
          <div class="form-group">
            <label for="title">Form Title</label>
            <input type="text" id="title" name={ `title[${lng}]` } class="form-control" value={ (form.get('title') || {})[lng] || '' } data-input={ `title.${lng}` } hide={ eden.get('i18n.lang')() !== lng } each={ (lng, i) in languages } onchange={ onSlug }>
          </div>
          <div class="form-group">
            <label for="slug">Form Slug</label>
            <input type="text" id="slug" name="slug" class="form-control" ref="slug" data-input="slug" value={ form.get('slug') || '' } onchange={ onInput }>
          </div>
          <div class="form-group">
            <label for="placement">Form Placement</label>
            <input type="text" id="placement" name="placement" class="form-control" ref="placement" data-input="placement" value={ form.get('placement') || '' } onchange={ onInput }>
          </div>
          <div class="form-group">
            <label for="action">Form Action</label>
            <input type="text" id="action" name="action" class="form-control" ref="action" data-input="action" value={ form.get('action') || '' } onchange={ onInput }>
          </div>
          <div class="form-group">
            <label for="layout">Form Layout</label>
            <input type="text" id="layout" name="layout" class="form-control" ref="layout" data-input="layout" value={ form.get('layout') || '' } onchange={ onInput }>
          </div>
        </div>

      </div>
    </div>

    <div class="cms-placement-fields" data-form={ get('item.id') || 'form' } is="eden-fields" model={ form } form={ true } for="frontend" fields={ props.fields } on-save={ onForm } type={ get('item.id') || 'form' } />

  </div>

  <script>
    // import base
    import Base from '../../js/base';

    // export default
    export default class FormUpdatePage extends Base {

      /**
       * on before mount
       */
      onBeforeMount() {
        // super
        super.onBeforeMount(...arguments);

        // set update
        this.type     = this.props.type;
        this.form     = eden.get('model.add')('form', this.props.item.id, this.props.item);
        this.updating = {};

        // load data
        this.languages = eden.get('i18n').lngs || [];

        // is update
        this.isUpdate = false;
      }

      /**
      * on preview
      *
      * @param  {Event} e
      */
      onInput (e) {
        // save form
        this.saveForm(this.form);
      }

      /**
      * on language
      *
      * @param  {Event} e
      */
      onLanguage (e) {
        // set language
        this.language = e.target.getAttribute('data-lng');

        // update view
        this.update();
      }

      /**
      * set slug
      *
      * @param  {Event} e
      */
      onSlug (e) {
        
      }

      /**
      * saves form
      *
      * @param  {Object}  form
      *
      * @return {Promise}
      */
      async saveForm (form) {
        // set loading
        this.loading('save', true);

        // check type
        if (!form.type) form.set('type', this.props.type);

        // set input values
        jQuery('[data-input]', this.root).each((i, elem) => {
          // set value
          form.set(jQuery(elem).attr('data-input'), jQuery(elem).val());
        });

        // log data
        let res = await fetch('/admin/form/' + (form.get('id') ? form.get('id') + '/update' : 'create'), {
          'body'    : JSON.stringify(this.form.get()),
          'method'  : 'post',
          'headers' : {
            'Content-Type' : 'application/json'
          },
          'credentials' : 'same-origin'
        });

        // load data
        let data = await res.json();
        
        // check if new form
        if (!form.get('id') && data.result.id) {
          // change url
          let state = Object.assign({}, {
            'prevent' : true
          }, eden.router.history.location.state);
          
          // replace state
          eden.router.history.replace({
            'state'    : state,
            'pathname' : '/admin/form/' + data.result.id + '/update'
          });
        }

        // set logic
        for (let key in data.result) {
          // clone to form
          form.set(key, data.result[key]);
        }

        // set loading
        this.loading('save', false);
      }
    }
  </script>
</form-admin-update-page>
